name: Release

on:
  push:
    tags: ["v*.*.*"]

permissions:
  contents: write

defaults:
  run:
    shell: bash

jobs:
  build:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: linux-x64
          - os: macos-latest
            target: macos-arm64
          - os: windows-latest
            target: windows-x64

    steps:
      - uses: actions/checkout@v5

      - uses: dtolnay/rust-toolchain@stable

      - name: Install system dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update -q
          sudo apt-get install -y -q \
            build-essential pkg-config cmake ninja-build \
            libx11-dev libxi-dev libxcursor-dev libxrandr-dev libxinerama-dev \
            libxkbcommon-dev libxkbcommon-x11-dev libx11-xcb-dev \
            libxcb1-dev libxcb-randr0-dev libxcb-xfixes0-dev libxcb-shape0-dev libxcb-xkb-dev \
            libgl1-mesa-dev libegl1-mesa-dev wayland-protocols libwayland-dev \
            libasound2-dev libpulse-dev libudev-dev mesa-vulkan-drivers vulkan-tools

      - name: Install system dependencies (macOS)
        if: runner.os == 'macOS'
        run: |
          brew update
          brew install pkg-config cmake

      - name: Build release (core components)
        run: |
          cargo build --release --locked \
            -p astraweave-core \
            -p astraweave-ai \
            -p astraweave-physics \
            -p astraweave-nav \
            -p astraweave-render \
            -p astraweave-gameplay \
            -p astraweave-audio \
            -p astraweave-input \
            -p astraweave-ui \
            -p astraweave-net \
            -p astraweave-director \
            -p astraweave-memory \
            -p astraweave-persona \
            -p astraweave-ipc \
            -p astraweave-llm \
            -p astraweave-sdk \
            -p hello_companion \
            -p aw_build

      - name: Bundle with aw_build
        run: |
          NAME="astraweave-${{ matrix.target }}"
          VER="${GITHUB_REF_NAME#v}"
          cargo run -p aw_build -- bundle \
            --name "$NAME" --version "$VER" \
            --bin-dir target/release --assets assets --out dist

      - name: Upload bundle & manifest
        uses: actions/upload-artifact@v4
        with:
          name: bundle-${{ matrix.target }}
          path: |
            dist/*.zip
            dist/*.manifest.json

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          draft: false
          prerelease: false
          files: |
            dist/**/**/*.zip
            dist/**/**/*.manifest.json