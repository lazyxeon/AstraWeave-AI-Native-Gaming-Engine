name: Benchmarks

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  # Allow manual trigger
  workflow_dispatch:

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  benchmark:
    name: Performance Benchmarks
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
      - uses: actions/checkout@v5
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
      
      - name: Install Linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential pkg-config cmake ninja-build \
            libx11-dev libxi-dev libxcursor-dev libxrandr-dev libxinerama-dev \
            libxkbcommon-dev libxkbcommon-x11-dev libx11-xcb-dev libxcb1-dev \
            libxcb-randr0-dev libxcb-xfixes0-dev libxcb-shape0-dev libxcb-xkb-dev \
            libgl1-mesa-dev libegl1-mesa-dev wayland-protocols libwayland-dev \
            libasound2-dev libpulse-dev libudev-dev mesa-vulkan-drivers vulkan-tools
      
      - name: Set up Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          key: benchmark-v4
          cache-all-crates: true
      
      - name: Run benchmarks
        run: |
          echo "=== Running Benchmarks ===" > benchmark_results.txt
          echo "" >> benchmark_results.txt
          
          # Run benchmarks for packages that have them
          for pkg in astraweave-core astraweave-input; do
            if [ -d "$pkg/benches" ]; then
              echo "Running benchmarks for $pkg..." | tee -a benchmark_results.txt
              if cargo bench -p "$pkg" --benches >> benchmark_results.txt 2>&1; then
                echo "✅ Benchmarks completed for $pkg" | tee -a benchmark_results.txt
              else
                echo "⚠️ Benchmarks had issues for $pkg, but continuing..." | tee -a benchmark_results.txt
              fi
              echo "" >> benchmark_results.txt
            else
              echo "No benchmarks found for $pkg" | tee -a benchmark_results.txt
            fi
          done
          
          # Display results summary
          echo "=== Benchmark Results Summary ==="
          cat benchmark_results.txt
      
      - name: Upload benchmark results
        uses: actions/upload-artifact@v4
        with:
          name: benchmark-results
          path: benchmark_results.txt
          retention-days: 30
      
      - name: Store benchmark result for tracking
        uses: benchmark-action/github-action-benchmark@v1
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        with:
          name: Rust Benchmark
          tool: 'cargo'
          output-file-path: benchmark_results.txt
          github-token: ${{ secrets.GITHUB_TOKEN }}
          auto-push: false
          # Show alert with commit comment on detecting possible performance regression
          alert-threshold: '200%'
          comment-on-alert: true
          fail-on-alert: false
          # Enable alert commit comment only on push to main
          alert-comment-cc-users: '@lazyxeon'