name: Benchmark

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  # Allow manual trigger
  workflow_dispatch:

permissions:
  contents: write
  issues: write
  pull-requests: write
  pages: write

jobs:
  benchmark:
    name: Performance Benchmarks
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
      pages: write
    steps:
      - uses: actions/checkout@v5
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
      
      - name: Install Linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential pkg-config cmake ninja-build \
            libx11-dev libxi-dev libxcursor-dev libxrandr-dev libxinerama-dev \
            libxkbcommon-dev libxkbcommon-x11-dev libx11-xcb-dev libxcb1-dev \
            libxcb-randr0-dev libxcb-xfixes0-dev libxcb-shape0-dev libxcb-xkb-dev \
            libgl1-mesa-dev libegl1-mesa-dev wayland-protocols libwayland-dev \
            libasound2-dev libpulse-dev libudev-dev mesa-vulkan-drivers vulkan-tools
      
      - name: Install cargo-criterion
        run: cargo install cargo-criterion
      
      - name: Run benchmarks
        run: |
          # Run benchmarks only for packages that have bench targets
          if cargo bench --help | grep -q "package"; then
            # List packages that have benchmarks
            for pkg in astraweave-core astraweave-input; do
              if [ -d "$pkg/benches" ]; then
                echo "Running benchmarks for $pkg..."
                if cargo criterion --output-format bencher -p "$pkg" >> output.txt 2>&1; then
                  echo "✅ Benchmarks completed successfully for $pkg"
                else
                  echo "⚠️ Benchmarks failed for $pkg, but continuing..." >> output.txt
                fi
              else
                echo "No bench directory found for $pkg"
              fi
            done
          else
            echo "No benchmarks found" > output.txt
          fi
          
          # Ensure output file exists and has content
          if [ ! -f output.txt ]; then
            echo "No benchmark results available" > output.txt
          elif [ ! -s output.txt ]; then
            echo "Benchmarks completed but no output generated" > output.txt
          fi
          
          # Display results summary
          echo "=== Benchmark Results Summary ==="
          cat output.txt
      
      - name: Initialize gh-pages branch if needed
        run: |
          # Configure git
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          
          # Check if gh-pages branch exists
          if ! git ls-remote --heads origin gh-pages | grep -q gh-pages; then
            echo "Creating gh-pages branch..."
            git checkout --orphan gh-pages
            git rm -rf .
            echo "# Benchmark Results" > README.md
            echo "" > .nojekyll
            git add README.md .nojekyll
            git commit -m "Initialize gh-pages branch for benchmark results"
            git push origin gh-pages
            git checkout -
          else
            echo "gh-pages branch already exists"
          fi
        continue-on-error: true
      
      - name: Store benchmark result
        uses: benchmark-action/github-action-benchmark@v1
        with:
          name: Rust Benchmark
          tool: 'cargo'
          output-file-path: output.txt
          # Publish to GitHub Pages
          github-token: ${{ secrets.GITHUB_TOKEN }}
          auto-push: true
          # Show alert with commit comment on detecting possible performance regression
          alert-threshold: '200%'
          comment-on-alert: true
          fail-on-alert: false
          # Enable alert commit comment only on push to main
          alert-comment-cc-users: '@lazyxeon'